/* 
This is an example of call to HotSpot C functions from an external C++ code. In this
example random and constant power values are used for a single tile configuration or 
a 2x2 configuration. Temperature traces are saved in a file with extension .ttrace. 
Three functions have to be called in sequence: 1) sim_init, 2) sim_main, and 3) sim_exit.

1) Function sim_init initializes HotSpot by passing five file names. The first file is
the HotSpot floorplan descriptor. The value returned by sim_init is the number of blocks
read in the floorplan descriptor. The second file is the configuration for thermal
analysis. The third file contains initial temperature. The fourth file is the name of
an output file for saving blocks steady state temperatures, computed assuming power is 
the average of values used during simulation. The fifth file is the name of an output 
file for saving grid steady state temperatures. Template of sim_init is as follows

int sim_init(char *flp_file, char *config_file, char *init_file, char *steady_file,
char *gridsteady_file)

2) Function sim_main calls the simulator by passing a pointer to an array of power
values (power_sim), a pointer to an array of temperature values (temp_sim), and the 
current simulation time (time_sim) in seconds. It must be called once with time_sim set
to 0.0 so that initial temperatures are read, and then repeatedly for as many time steps 
as required. It uses the values in power_sim to compute the values in temp_sim. The 
convention for the power and temperature arrays is that the ordering follows the same 
ordering of the floorplan file, in which blocks are listed one per line. Therefore the 
size of power/temp is determined strictly by the number of blocks listed in the 
floorplan file. Template is as follows

void sim_main(double *power_sim, double *temp_sim, double time_sim)

3) Function sim_exit closes the simulation and saves temperature in the steady state
file. Template is simple

void sim_exit();
 */
#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <string.h>

#include "PTsim.hpp"
#include "Component.hpp"
#include "CmpConfig.hpp"
#include "Config.hpp"


extern "C" {
#include "PTsim.h"
}

#define MAXSTRING 128

using namespace std;

namespace cmpex {
  
  extern cmp::CmpConfig cmpConfig;
  extern Config config;

  using namespace cmp;

  namespace temperature {

//=======================================================================
/*
 * Constructors and destructor
 */
PTsim::PTsim() {}

PTsim::~PTsim() {}

vector<double> PTsim::coreTemp_;
vector<double> PTsim::L1DTemp_;
vector<double> PTsim::L1ITemp_;
vector<double> PTsim::L2Temp_;
vector<double> PTsim::L3Temp_;
vector<double> PTsim::MCTemp_;
vector<double> PTsim::MeshRouterTemp_;
vector<double> PTsim::MeshLinkTemp_;

//=======================================================================
/*
 * Calculates transient and steady-state temperature of cmp configuration.
 */


string config_filename("./src/ptsim/cmp.config");
// tile
//double block_power[9]={0.5,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0};
//double warmup_power[9];
//string floorplan_filename("tile.flp");
//string inittemp_filename("tile.init");
//string steadytemp_filename("tile.steady");
//string ttrace_filename("tile.ttrace");
//string gridsteadytemp_filename("tile.grid.steady");

// cmp2x2
//double block_power[34]={0.5,0.5,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0};
//double warmup_power[34];

//string floorplan_filename("cmp2x2.flp");
//string inittemp_filename("cmp2x2.init");
//string steadytemp_filename("cmp2x2.steady");
//string ttrace_filename("cmp2x2.ttrace");
//string gridsteadytemp_filename("cmp2x2.grid.steady");

// cmp4x4
//double block_power[130]={0.5,0.5,
//			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
//			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
//			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
//			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0};
//double warmup_power[130];
//string floorplan_filename("cmp4x4.flp");
//string inittemp_filename("cmp4x4.init");
//string steadytemp_filename("cmp4x4.steady");
//string ttrace_filename("cmp4x4.ttrace");
//string gridsteadytemp_filename("cmp4x4.grid.steady");

// cmp8x8
/*
double block_power[514]={0.5,0.5,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0};
double warmup_power[514];
string floorplan_filename("cmp8x8.flp");
string inittemp_filename("cmp8x8.init");
string steadytemp_filename("cmp8x8.steady");
string ttrace_filename("cmp8x8.ttrace");
string gridsteadytemp_filename("cmp8x8.grid.steady");
*/
// cmp16x16

double block_power[2050]={0.5,0.5,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			  0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			  0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,
			 0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0,0.01,0.1,0.5,0.01,1.0,2.0,0.5,1.0};
double warmup_power[2050];
string floorplan_filename("./src/ptsim/cmp16x16.flp");
string inittemp_filename("./src/ptsim/cmp16x16.init");
string steadytemp_filename("./src/ptsim/cmp16x16.steady");
string ttrace_filename("./src/ptsim/cmp16x16.ttrace");
string gridsteadytemp_filename("./src/ptsim/cmp16x16.grid.steady");


string null_filename("(null)");

int PTsim::CallHotSpot(cmp::Component * cmp)
{
  int i,j;
  double *power_sim,*temp_sim, time_sim;
  ifstream pin;
  ofstream tout;
  int n_blocks;
  char flp[MAXSTRING];
  char cfg[MAXSTRING];
  char initt[MAXSTRING];
  char stdyt[MAXSTRING];
  char gstdyt[MAXSTRING];
  char nullt[MAXSTRING];
  string line;
  double total_power=0.0;

  // tile
  // n_blocks = 9;
  // cmp2x2
  //n_blocks = 34;
  //cmp2x2
  //n_blocks = 130;
  //cmp4x4
  //n_blocks = 2050;

  
  // adapt C++ strings to C strings
  strcpy(flp,floorplan_filename.c_str());
  strcpy(cfg,config_filename.c_str());
  strcpy(initt,inittemp_filename.c_str());
  strcpy(nullt,null_filename.c_str());
  strcpy(stdyt,steadytemp_filename.c_str());
  strcpy(gstdyt,gridsteadytemp_filename.c_str());

  // initialize hotspot with steady temp target file same as init temp file 
  n_blocks=sim_init(flp,cfg,nullt,initt,gstdyt);
  cout << "Number of blocks = " << n_blocks << endl;

  // create power vector
  power_sim = new double[n_blocks];

  // set warmup power: in this example it is set to block_power
  for(i=0;i<n_blocks;i++){
    warmup_power[i]=0;
    //warmup_power[i]=block_power[i];
  }

  // set block_power to warmup_power
  for(i=0;i<n_blocks;i++){
    power_sim[i]=warmup_power[i];
  }


  // create temperature vector
  temp_sim= new double[n_blocks];

  // trace file opening
  tout.open(ttrace_filename.c_str());

  // initialize simulation time
  time_sim = 0.0;

  // initialization of hotspot with 1st call to sim_main, time is 0.0
  sim_main(power_sim,temp_sim,time_sim);
  // increase time and rerun hotspot, save intermediate temp values to trace file
  time_sim += 0.001;
  sim_main(power_sim,temp_sim,time_sim);
  // terminate hotspot and save steady file in init file
  sim_exit();

  //input power (from CMPexplore) file opening
  pin.open("ptsim_power.txt");

  i=0;
  while(getline(pin,line)) {
    if ((line == "") || (!line.find("#")))
      continue;
    stringstream ss;
    ss << line;
    double temp_double;
    while(ss >> temp_double) {
      if (1) // every tile is ON
      //if (((i-2)/8)%2==0) // every other tile is ON
      //if (((i-2)>=(n_blocks-2)/4) && (i-2<(n_blocks-2)/4+n_blocks/2)) // half CMP centered is ON
	//if ((i-2)>=((n_blocks-2)/2)) // top half CMP is ON
	power_sim[i] = temp_double;
      else
	power_sim[i] = 0;
      total_power += power_sim[i];
      cout << power_sim[i] << endl;
      i++;
    }
  }
  pin.close();

  cout << "TOTAL POWER = " << total_power << endl;
  if(i != n_blocks){
    cout << "\nERROR: power elements /= number of blocks\n\n";
    return -1;
  }

  // set block power to transient values
  //for(i=0;i<n_blocks;i++){
  //power_sim[i]=block_power[i];
  //}

  // re-initialize simulation time
  time_sim = 0.0;

  // re-initialize hotspot with correct init file
  sim_init(flp,cfg,initt,stdyt,gstdyt);

  // re-initialization of hotspot with 1st call to sim_main, time is 0.0
  sim_main(power_sim,temp_sim,time_sim);

  // increase time and rerun hotspot, save intermediate temp values to trace file
  time_sim += 0.001;
  for(i=0;i<=0;i++) {
    sim_main(power_sim,temp_sim,time_sim);
    //output instantaneous temperature trace
    for(j=0;j<n_blocks;j++)
      tout << setiosflags(ios::fixed) << setprecision(2) << temp_sim[j]-273.15 << "\t";
    tout << endl;

    time_sim += 0.001;
  }

  // terminate hotspot
  sim_exit();

  // closing
  tout.close();

  delete [] power_sim;
  delete [] temp_sim;
  return 0;
}

//=======================================================================

  } // namespace temperature

} //namespace cmpex
